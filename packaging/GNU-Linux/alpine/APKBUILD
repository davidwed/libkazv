pkgname=libkazv
pkgver="1.0"
pkgrel=0
pkgdesc="libkazv is a matrix client sdk built upon lager and the value-oriented design it enables."
url="https://lily.kazv.moe/"
arch="x86_64"
license="AGPL-3.0"
makedepends=""
depends="cmake make gcc g++ git openssl-dev curl-dev bash automake autoconf libmicrohttpd-dev boost-dev"
install=""
source="libkazv.tar.gz"
subpackages=""
options="!check"

prepare() {
	echo prepareing...
}

build() {
	echo "building"
}

package() {
	mkdir -p $pkgdir/usr
	JOBS=3
        DEPS_INSTALL_DIR=$pkgdir/usr
        LIBKAZV_INSTALL_DIR=$pkgdir/usr

        cd $builddir/build/deps

        # wget https://github.com/catchorg/Catch2/archive/v2.13.4.tar.gz -O catch2.tar.gz && \
        tar -xf catch2.tar.gz && \
        cd Catch2-* && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -DCATCH_ENABLE_WERROR=OFF -DBUILD_TESTING=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf Catch2-* catch2.tar.gz
        rm catch2.tar.gz

        # wget https://github.com/nlohmann/json/archive/v3.9.1.tar.gz -O json.tar.gz && \
        tar -xf json.tar.gz && \
        cd json-* && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -DJSON_MultipleHeaders=ON -DJSON_BuildTests=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf json-* json.tar.gz
        rm json.tar.gz

        # wget https://github.com/USCiLab/cereal/archive/v1.3.0.tar.gz -O cereal.tar.gz && \
        tar -xf cereal.tar.gz && \
        cd cereal-* && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -DJUST_INSTALL_CEREAL=ON -DWITH_WERROR=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf cereal-* cereal.tar.gz
        rm cereal.tar.gz

        # git clone https://github.com/arximboldi/immer.git && \
        cd immer && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -Dimmer_BUILD_TESTS=OFF -Dimmer_BUILD_EXAMPLES=OFF -Dimmer_BUILD_DOCS=OFF -Dimmer_BUILD_EXTRAS=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf immer

        # git clone https://github.com/arximboldi/zug.git && \
        cd zug && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -Dzug_BUILD_TESTS=OFF -Dzug_BUILD_EXAMPLES=OFF -Dzug_BUILD_DOCS=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf zug

        # git clone https://github.com/arximboldi/lager.git && \
        cd lager && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -Dlager_BUILD_TESTS=OFF -Dlager_BUILD_EXAMPLES=OFF -Dlager_BUILD_DOCS=OFF && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf lager

        # wget https://github.com/whoshuu/cpr/archive/refs/tags/1.6.0.tar.gz -O cpr.tar.gz && \
        tar -xf cpr.tar.gz && \
        cd cpr-* && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -DCPR_FORCE_USE_SYSTEM_CURL=ON -DCPR_FORCE_OPENSSL_BACKEND=ON -DCPR_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=ON && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf cpr-* cpr.tar.gz
        rm cpr.tar.gz

        # wget https://gitlab.matrix.org/matrix-org/olm/-/archive/3.2.4/olm-3.2.4.tar.gz -O olm.tar.gz && \
        tar -xf olm.tar.gz && \
        cd olm-* && \
        mkdir build && cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR" -DOLM_TESTS=OFF -DBUILD_SHARED_LIBS=ON && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf olm-* olm.tar.gz
        rm olm.tar.gz

        # wget https://github.com/etr/libhttpserver/archive/0.18.2.tar.gz -O libhttpserver.tar.gz && \
        tar -xf libhttpserver.tar.gz && \
        cd libhttpserver-* && \
        autoupdate && \
        ./bootstrap && \
        mkdir build && cd build && \
        ../configure --prefix="$DEPS_INSTALL_DIR" && \
        make -j$JOBS && \
        make -j$JOBS install && \
        cd ../.. && \
        # rm -rf libhttpserver-* libhttpserver.tar.gz
        rm libhttpserver.tar.gz

        # wget https://github.com/weidai11/cryptopp/archive/refs/tags/CRYPTOPP_8_5_0.tar.gz -O cryptopp.tar.gz && \
        tar -xf cryptopp.tar.gz && \
        cd cryptopp*
	mkdir build && cd build
	cmake .. -DCMAKE_INSTALL_PREFIX="$DEPS_INSTALL_DIR"
        make && \
        make install  && \
        cd ../.. 
        # rm -rf cryptopp*

	# mv -f $pkgdir/usr/local/include/* $pkgdir/usr/include/
	# mv -f $pkgdir/usr/local/lib/* $pkgdir/usr/lib/
	# mv -f $pkgdir/usr/local/share/* $pkgdir/usr/share/
	# mv -f $pkgdir/usr/local/bin/* $pkgdir/usr/
	# rm -rf $pkgdir/usr/local
	
	# ls $pkgdir/usr/include
	
        cd $builddir/build
        cmake .. -DCMAKE_INSTALL_PREFIX="$LIBKAZV_INSTALL_DIR" -DCMAKE_PREFIX_PATH="$DEPS_INSTALL_DIR"
        make -j$JOBS

	echo "packing..."
	cd $builddir/build
	make -j$JOBS install
}
sha512sums="
4562ebf00add63b21c14b457b610e4d9a1e5e1e66ec95f6a6c89feff07dd3d4528d21d742052385f8b42879664db2cb1e46880b59391b79030fa2efbe27391c1  libkazv.tar.gz
"
